name: Deploy Django App to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_NAME: django-app
      REGION: us-central1
      MYSQL_INSTANCE: ${{ secrets.MYSQL_INSTANCE }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker to Google Cloud
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | docker login -u _json_key --password-stdin https://gcr.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --set-env-vars MYSQL_INSTANCE=${{ env.MYSQL_INSTANCE }} \
            --set-env-vars MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} \
            --set-env-vars MYSQL_USER=${{ env.MYSQL_USER }} \
            --set-env-vars MYSQL_PASSWORD=${{ env.MYSQL_PASSWORD }} \
            --allow-unauthenticated

      - name: Run database migrations
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)' | xargs -I {} curl -X POST "{}/migrate"

      - name: Collect static files
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)' | xargs -I {} curl -X POST "{}/collectstatic"
