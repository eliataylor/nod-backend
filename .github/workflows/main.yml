name: Deploy NOD Backend to Cloud Run

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    env:
      # GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      # SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
      # GCP_REGION: ${{ secrets.GCP_REGION }}
      MYSQL_INSTANCE: ${{ secrets.MYSQL_INSTANCE }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DB }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASS }}
      GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v1

      - name: 'Set up GCP auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ vars.GCP_SERVICE_ACCOUNT }}'

      - name: 'Set up Google Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Configure docker auth using gcloud'
        run: gcloud auth configure-docker ${{ vars.ARTIFACT_REGISTRY_URL }}

      - name: 'Build docker image'
        uses: docker/build-push-action@v5
        with:
          tags: ${{ vars.ARTIFACT_REGISTRY_URL }}/${{ vars.GCP_PROJECT_ID }}/nod_backend/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}
          push: true
          context: ${{ inputs.dockerContext }}
          file: ${{ inputs.dockerFilePath }}

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ vars.GCP_SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: '${{ vars.ARTIFACT_REGISTRY_URL }}/${{ vars.GCP_PROJECT_ID }}/nod_backend/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}'
          flags: '--platform managed --allow-unauthenticated'
          env_vars: |
            MYSQL_INSTANCE=${{ env.MYSQL_INSTANCE }}
            MYSQL_DATABASE=${{ env.MYSQL_DATABASE }}
            MYSQL_USER=${{ env.MYSQL_USER }}
            MYSQL_PASSWORD=${{ env.MYSQL_PASSWORD }}

      - name: 'Run database migrations'
        run: |
          gcloud run services describe ${{ vars.GCP_SERVICE_NAME }} --region ${{ vars.GCP_REGION }} --format 'value(status.url)' | xargs -I {} curl -X POST "{}/migrate"

      - name: 'Collect static files'
        run: |
          gcloud run services describe ${{ vars.GCP_SERVICE_NAME }} --region ${{ vars.GCP_REGION }} --format 'value(status.url)' | xargs -I {} curl -X POST "{}/collectstatic"
