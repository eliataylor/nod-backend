name: Deploy NOD Backend to Cloud Run

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment: 'nod_django_prod'

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Set up GCP auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ vars.GCP_SERVICE_ACCOUNT }}'

      - name: 'Set up Google Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Configure docker auth using gcloud'
        run: gcloud auth configure-docker ${{ vars.ARTIFACT_REGISTRY_URL }}

      - name: 'Build docker image'
        uses: docker/build-push-action@v5
        with:
          tags: ${{ vars.ARTIFACT_REGISTRY_URL }}/${{ vars.GCP_PROJECT_ID }}/nod-backend/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}
          push: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 'Deploy to Cloud Run'
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ vars.GCP_SERVICE_NAME }}
          region: ${{ vars.GCP_REGION }}
          image: '${{ vars.ARTIFACT_REGISTRY_URL }}/${{ vars.GCP_PROJECT_ID }}/nod-backend/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}'
          flags: '--port=8000 --allow-unauthenticated --min-instances=1'
          env_vars: |-
            DJANGO_ENV=production
            GCP_BUCKET_NAME=${{ vars.GCP_BUCKET_NAME }}
          secrets: |-
            DJANGO_SECRET_KEY=DJANGO_SECRET_KEY:latest
            DJANGO_SUPERUSER_USERNAME=DJANGO_SUPERUSER_USERNAME:latest
            DJANGO_SUPERUSER_PASSWORD=DJANGO_SUPERUSER_PASSWORD:latest
            DJANGO_SUPERUSER_EMAIL=DJANGO_SUPERUSER_EMAIL:latest
            MYSQL_INSTANCE=MYSQL_INSTANCE:latest
            MYSQL_DATABASE=MYSQL_DATABASE:latest
            MYSQL_USER=MYSQL_USER:latest
            MYSQL_PASSWORD=MYSQL_PASSWORD:latest
            GCP_SA_KEY=GCP_SA_KEY:latest

      - name: 'Run database migrations'
        run: |
          curl -X POST "${{ steps.deploy.outputs.url }}/migrate/"

      - name: 'Collect static files'
        run: |
          curl -X POST "${{ steps.deploy.outputs.url }}/collectstatic/"
